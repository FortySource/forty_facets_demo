.row
  .col-md-6
    %h3.well-title="#{@movies.count} matching movies found"
    .row
      - @movies.each do |movie|
        .col-md-4
          .well.movie
            .title{title: movie.title}=movie.title
            .details
              .badge.price
                =movie.price
                $
              %i.glyphicon.glyphicon-calendar{title: 'Year'}
              =movie.year
              %br
              %i.glyphicon.glyphicon-film{title: 'Genre'}
              =movie.genre.name
              %br
              %i.glyphicon.glyphicon-home{title: 'Studio'}
              =movie.studio.name

    = will_paginate @movies
  .col-md-6
    %h3.well-title
      Filter
      = link_to 'reset', '?', class: 'btn btn-default btn-sm pull-right'
    .well
      .row.search-inputs
        = form_tag nil, method: :get do
          = hidden_field_tag 'search[order]', @search.order.definition.request_value if @search.order
          .col-md-4
            - title_filter = @search.filter(:title)
            = text_field_tag 'search[title]', title_filter.value, class: 'form-control', placeholder: title_filter.name
          .col-md-5
            - price_filter = @search.filter(:price)
            .input-group
              .input-group-addon $
              = text_field_tag 'search[price]', price_filter.value, class: 'form-control', id: 'price-range', data: { 'absolute-min' => price_filter.absolute_min,  'absolute-max' => price_filter.absolute_max  }, disabled: true
              .input-group-btn
                %button.btn.btn-primary search
            %br
            -#.input-group
              .input-group-addon $
              = text_field_tag 'search[price]', price_filter.value, class: 'form-control', id: 'price-range', data: { 'absolute-min' => price_filter.absolute_min,  'absolute-max' => price_filter.absolute_max  }, disabled: true
              %button.form-control.btn.btn-primary search
            .slider-row
              .slider-min
                ="#{price_filter.absolute_min}$"
              .slider-max
                ="#{price_filter.absolute_max}$"
              .slider
                #slider-range

          .col-md-3
            %a.btn.btn-default{"data-toggle" => "dropdown", href: "#", role: "button"}
              sort by:
              = @search.order.title if @search.order
              %b.caret
            %ul#menu1.dropdown-menu{"aria-labelledby" => "drop4", role: "menu"}
              - @search.orders.reject(&:active).each do |order|
                %li
                  = link_to order.title, order.by.path

      .row
        - [:genre, :studio, :year].each do |filter_name|
          - filter = @search.filter(filter_name)
          .col-md-4
            .filter
              .filter-title= filter.name
              .filter-values
                %ul.selected
                  - filter.selected.each do |entity|
                    - display = filter_name == :year ? entity : entity.name
                    %li= link_to display, filter.remove(entity).path
                %ul.selectable
                  - filter.facet.reject(&:selected).each do |facet_value|
                    - entity = facet_value.entity
                    %li
                      - display = filter_name == :year ? entity : entity.name
                      = link_to display, filter.add(entity).path
                      %span.count= "(#{facet_value.count})"
:javascript
  $(function() {
    var current = $('#price-range').val();
    var abs_min = parseFloat($('#price-range').attr('data-absolute-min'));
    var abs_max = parseFloat($('#price-range').attr('data-absolute-max'));

    var current_min = abs_min;
    var current_max = abs_max;

    if (current != '') {
      var splits = current.split(' - ');
      current_min = parseFloat(splits[0]);
      current_max = parseFloat(splits[1]);
    }
    $( "#slider-range" ).slider({
      range: true,
      min: abs_min,
      max:  abs_max,
      values: [ current_min, current_max ],
      slide: function( event, ui ) {
        $( "#price-range" ).val( ui.values[ 0 ] + " - " + ui.values[ 1 ] );
      }
    });
  });
